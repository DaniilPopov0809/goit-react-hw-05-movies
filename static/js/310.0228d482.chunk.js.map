{"version":3,"file":"static/js/310.0228d482.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","pages/Home/Home.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","utils/API.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding: 15px 0;\n  border-bottom: 1px solid var(--link-color);\n`;\n\nexport const Item = styled.li`\n  box-sizing: border-box;\n  position: relative;\n  scale: 1;\n  transition: scale 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus,\n  &:hover {\n    scale: 1.05;\n  }\n\n  box-shadow: var(--shadow);\n\n  border: 1px solid var(--link-color);\n  border-radius: 10px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 20px) / 2);\n  }\n  @media screen and (min-width: 1280px) {\n    flex-basis: calc((100% - 60px) / 4);\n  }\n`;\nexport const Grade = styled.p`\n  position: absolute;\n  top: 0;\n  font-weight: 500;\n  font-size: 16px;\n  padding: 5px 10px;\n  background-color: var(--accent-color);\n  \n`;\n\nexport const ItemLink = styled(Link)`\n  \n  color: var(--secondary-text-color);\n  transition: color 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus,\n  &:hover {\n    color: var(--accent-color);\n  }\n`;\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Description = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  padding: 10px 5px;\n`;\n\nexport const Year = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  padding: 0 0 10px 0;\n`;\n\n\n\nexport const Image = styled.img``;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section``;\n\nexport const Title = styled.h1`\n  text-align: center;\n  padding: 10px 0;\n  color: var(--link-color);\n`;\n","import { List, Item, ItemLink, Description, Image, Year, Grade, Wrapper } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst IMGPATH = 'https://image.tmdb.org/t/p/original';\n\nconst MoviesList = ({ trendFilms }) => {\n  return (\n    <List>\n      {trendFilms.map(({ id, title, poster_path, release_date, vote_average }) => {\n        return (\n          <Item key={id}>\n            <ItemLink to={`movies/${id}`}>\n              <Image src={`${IMGPATH}/${poster_path}`} alt={`${title}`} />\n              <Wrapper>\n              <Description>{title}</Description>\n              <Year>{`${release_date.slice(0, 4)}`}</Year>\n              </Wrapper>\n              <Grade>{`${vote_average.toFixed(2)}`}</Grade>\n            </ItemLink>\n            \n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  trendFilms: PropTypes.array,\n};\n","import { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { getTrendingFilmAPI } from '../../utils/API';\nimport { Section, Title } from './Home.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [trendFilms, setTrendFilms] = useState([]);\n\n  useEffect(() => {\n    const getTrendFilm = async () => {\n      try {\n        const currentTrendFilms = await getTrendingFilmAPI();\n        setTrendFilms(currentTrendFilms.results);\n      } catch {\n        toast.error('Oops, something went wrong!');\n      } finally {\n      }\n    };\n\n    getTrendFilm();\n  }, []);\n\n  return (\n    <Section>\n      <Title>TRENDING TODAY</Title>\n      <MoviesList trendFilms={trendFilms} />\n    </Section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst PARAMS = {\n  params: {\n    api_key: '5928663a35cf4a3fefab8899a0242484',\n  },\n};\n\nasync function getTrendingFilmAPI() {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, PARAMS);\n  const data = response.data;\n  return data;\n}\n\nasync function getFilmDetailsAPI(movieId) {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, PARAMS);\n  const data = response.data;\n  return data;\n}\n\nasync function getCreditsFilmAPI(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    PARAMS\n  );\n  const data = response.data;\n  return data;\n}\n\nasync function getReviewsFilmAPI(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    PARAMS\n  );\n  const data = response.data;\n  return data;\n}\n\nasync function getSearchFilmAPI(searchMovie) {\n  const KEY = '5928663a35cf4a3fefab8899a0242484';\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${searchMovie}&page=1&include_adult=false`\n  );\n  const data = response.data;\n  return data;\n}\n\nexport {\n  getTrendingFilmAPI,\n  getCreditsFilmAPI,\n  getFilmDetailsAPI,\n  getReviewsFilmAPI,\n  getSearchFilmAPI,\n};\n"],"names":["List","styled","Item","Grade","ItemLink","Link","Wrapper","Description","Year","Image","Section","Title","trendFilms","map","id","title","poster_path","release_date","vote_average","to","src","alt","slice","toFixed","useState","setTrendFilms","useEffect","getTrendFilm","getTrendingFilmAPI","currentTrendFilms","results","toast","BASE_URL","PARAMS","params","api_key","axios","response","data","getFilmDetailsAPI","movieId","getCreditsFilmAPI","getReviewsFilmAPI","getSearchFilmAPI","searchMovie"],"sourceRoot":""}