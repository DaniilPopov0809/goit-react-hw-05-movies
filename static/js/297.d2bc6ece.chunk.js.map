{"version":3,"file":"static/js/297.d2bc6ece.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","utils/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\npadding: 20px 0;\ndisplay: flex;\njustify-content: center;\nborder-bottom: 1px solid var(--link-color);\n`;\n\nexport const Input= styled.input`\n\n`;\n\nexport const Button = styled.button`\n\n`;","import { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSearchParams } from 'react-router-dom';\nimport {Form, Input, Button} from './Searchbar.styled'\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  const handleSumbitForm = event => {\n    event.preventDefault();\n    const query = event.target.inputSearch.value;\n\n    if (query.trim() === '') {\n      toast.info('Enter search image or photo!');\n      return;\n    }\n    setSearchParams(query ? { query } : {});\n    onSubmit(query);\n  };\n\n  useEffect(() => {\n    if (searchQuery) {\n      onSubmit(searchQuery);\n    }\n  });\n\n  return (\n    <>\n      <Form onSubmit={handleSumbitForm}>\n        <Input\n          type=\"text\"\n          name=\"inputSearch\"\n          placeholder=\"Enter the movie\"\n          defaultValue={searchQuery}\n          autoFocus\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default Searchbar;\n","import { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getSearchFilmAPI } from 'utils/API';\nimport Loader from 'components/Loader/Loader';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { Link } from 'react-router-dom';\nimport { LoaderWrapper } from 'components/Layout/Layout.styled';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [foundMovies, setFoundMovies] = useState([]);\n\n  const location = useLocation();\n  console.log('movies', location);\n\n  const onSubmit = searchValue => {\n    setSearchMovie(searchValue);\n  };\n\n  useEffect(() => {\n    const getSearchFilm = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getSearchFilmAPI(searchMovie);\n        setFoundMovies(data.results);\n      } catch {\n        toast.error('Oops, something went wrong!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (searchMovie) {\n      getSearchFilm();\n    }\n  }, [searchMovie]);\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      {isLoading && <LoaderWrapper><Loader /></LoaderWrapper>}\n      <ul>\n        {foundMovies.map(({ title, id }) => {\n          return (\n            <li key={id}>\n              <Link state={{ from: location }} to={`/movies/${id}`}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      \n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst PARAMS = {\n  params: {\n    api_key: '5928663a35cf4a3fefab8899a0242484',\n  },\n};\n\nasync function getTrendingFilmAPI() {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, PARAMS);\n  const data = response.data;\n  return data;\n}\n\nasync function getFilmDetailsAPI(movieId) {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, PARAMS);\n  const data = response.data;\n  return data;\n}\n\nasync function getCreditsFilmAPI(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    PARAMS\n  );\n  const data = response.data;\n  return data;\n}\n\nasync function getReviewsFilmAPI(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    PARAMS\n  );\n  const data = response.data;\n  return data;\n}\n\nasync function getSearchFilmAPI(searchMovie) {\n  const KEY = '5928663a35cf4a3fefab8899a0242484'\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${searchMovie}&page=1&include_adult=false`);\n  const data = response.data;\n  return data;\n}\n\nexport {\n  getTrendingFilmAPI,\n  getCreditsFilmAPI,\n  getFilmDetailsAPI,\n  getReviewsFilmAPI,\n  getSearchFilmAPI,\n};\n"],"names":["Form","styled","Input","Button","onSubmit","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","event","preventDefault","query","target","inputSearch","value","trim","toast","type","name","placeholder","defaultValue","autoFocus","useState","searchMovie","setSearchMovie","isLoading","setIsLoading","foundMovies","setFoundMovies","location","useLocation","console","log","getSearchFilm","getSearchFilmAPI","data","results","searchValue","Loader","map","title","id","state","from","to","BASE_URL","PARAMS","params","api_key","getTrendingFilmAPI","axios","response","getFilmDetailsAPI","movieId","getCreditsFilmAPI","getReviewsFilmAPI"],"sourceRoot":""}