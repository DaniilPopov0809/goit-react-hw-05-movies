{"version":3,"file":"static/js/922.dfacd602.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","utils/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n`;\n\nexport const Title = styled.h1`\ntext-align: center;\npadding: 10px 0;\ncolor: var(--link-color);\n`;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 10px;\n  column-gap: 20px;\n  padding: 10px 0;\n  border-bottom: 1px solid var(--link-color);\n`;\n\nexport const Item = styled.li`\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 20px) / 2);\n  }\n  @media screen and (min-width: 1280px) {\n    flex-basis: calc((100% - 60px) / 4);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--secondary-text-color);\n  transition: color 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus,\n  &:hover {\n    color: var(--accent-color);\n  }\n`;\n\nexport const Description = styled.p`\n  padding: 12px 0;\n`;\n\nexport const Image = styled.img`\n  scale: 1;\n  transition: scale 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus,\n  &:hover {\n    scale: 1.05;\n  }\n`;\n","import { List, Item, ItemLink, Description, Image } from './MoviesList.styled';\n\nconst IMGPATH = 'https://image.tmdb.org/t/p/original';\n\nconst MoviesList = ({ trendFilms }) => {\n  return (\n    <List>\n      {trendFilms.map(({ id, title, poster_path }) => {\n        return (\n          <Item key={id}>\n            <ItemLink to={`movies/${id}`}>\n              <Image src={`${IMGPATH}/${poster_path}`} alt={`${title}`} />\n              <Description>{title}</Description>\n            </ItemLink>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { getTrendingFilmAPI } from '../../utils/API';\nimport { Section, Title } from './Home.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [trendFilms, setTrendFilms] = useState([]);\n\n  useEffect(() => {\n    const getTrendFilm = async () => {\n      try {\n        const currentTrendFilms = await getTrendingFilmAPI();\n        setTrendFilms(currentTrendFilms.results);\n      } catch {\n        toast.error('Oops, something went wrong!');\n      } finally {\n      }\n    };\n\n    getTrendFilm();\n  }, []);\n\n  return (\n    <Section>\n      <Title>Trending today</Title>\n      <MoviesList trendFilms={trendFilms} />\n    </Section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst PARAMS = {\n  params: {\n    api_key: '5928663a35cf4a3fefab8899a0242484',\n  },\n};\n\nasync function getTrendingFilmAPI() {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, PARAMS);\n  const data = response.data;\n  return data;\n}\n\nasync function getFilmDetailsAPI(movieId) {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, PARAMS);\n  const data = response.data;\n  return data;\n}\n\nasync function getCreditsFilmAPI(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    PARAMS\n  );\n  const data = response.data;\n  return data;\n}\n\nasync function getReviewsFilmAPI(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    PARAMS\n  );\n  const data = response.data;\n  return data;\n}\n\nasync function getSearchFilmAPI(searchMovie) {\n  const KEY = '5928663a35cf4a3fefab8899a0242484'\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${searchMovie}&page=1&include_adult=false`);\n  const data = response.data;\n  return data;\n}\n\nexport {\n  getTrendingFilmAPI,\n  getCreditsFilmAPI,\n  getFilmDetailsAPI,\n  getReviewsFilmAPI,\n  getSearchFilmAPI,\n};\n"],"names":["Section","styled","Title","List","Item","ItemLink","Link","Description","Image","trendFilms","map","id","title","poster_path","to","src","alt","useState","setTrendFilms","useEffect","getTrendFilm","getTrendingFilmAPI","currentTrendFilms","results","toast","BASE_URL","PARAMS","params","api_key","axios","response","data","getFilmDetailsAPI","movieId","getCreditsFilmAPI","getReviewsFilmAPI","getSearchFilmAPI","searchMovie"],"sourceRoot":""}