{"version":3,"file":"static/js/310.a1144a7d.chunk.js","mappings":"uRAEaA,EAAUC,EAAAA,EAAAA,QAAH,sBAQPC,GANQD,EAAAA,EAAAA,GAAH,gGAMIA,EAAAA,EAAAA,OAAH,+lBA2BNE,EAAYF,EAAAA,EAAAA,IAAH,6G,mBCVtB,EAtBmB,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WACpB,OACE,SAAC,KAAD,UACGA,EAAWC,KAAI,YAA6D,IAA1DC,EAAyD,EAAzDA,GAAIC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACvD,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAUC,GAAE,iBAAYL,GAAxB,WACE,SAAC,KAAD,CAAOM,IAAG,UATR,sCASQ,YAAgBJ,GAAeK,IAAG,UAAKN,MACjD,UAAC,KAAD,YACA,SAAC,KAAD,UAAcA,KACd,SAAC,KAAD,oBAAUE,EAAaK,MAAM,EAAG,UAEhC,SAAC,KAAD,oBAAWJ,EAAaK,QAAQ,UAPzBT,EAYd,KAGN,EC0BD,EA7Ca,WACX,OAAoCU,EAAAA,EAAAA,UAAS,IAA7C,eAAOZ,EAAP,KAAmBa,EAAnB,KACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAOE,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,iGAIbH,EAJa,iCAKWI,EAAAA,EAAAA,IAAmB,OAL9B,OAKfC,EALe,iBAOZL,EAPY,iCAQWI,EAAAA,EAAAA,IAAmB,QAR9B,OAQfC,EARe,cAWjBN,EAAcM,EAAkBC,SAXf,kDAajBC,EAAAA,GAAAA,MAAY,+BAbK,sGAAH,qDAkBlBJ,GACD,GAAE,CAACH,IAEJ,IAAMQ,EAAc,WAClBP,GAAUD,EACX,EAED,OACE,UAAClB,EAAD,YACE,UAACG,EAAD,YACE,SAACD,EAAD,CAAQyB,KAAK,SAASC,WAAS,EAACC,QAASH,EAAzC,6BAGA,SAACxB,EAAD,CAAQyB,KAAK,SAASE,QAASH,EAA/B,mCAIF,SAAC,EAAD,CAAYtB,WAAYA,MAG7B,C","sources":["pages/Home/Home.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section``;\n\nexport const Title = styled.h1`\n  text-align: center;\n  padding: 10px 0;\n  color: var(--link-color);\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  cursor: pointer;\n  border-radius: 15px;\n  border: 1px solid var(--link-color);\n  background-color: transparent;\n  font-size: 20px;\n  color: var(--link-color);\n  text-shadow: var(--shadow);\n  font-family: 'Roboto', sans-serif;\n\n  transition: color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    border-color: var(--accent-color);\n  }\n  &:focus {\n    border-color: var(--accent-color);\n    color: var(--accent-color);\n  }\n\n  /* &.active {\n    color: var(--accent-color);\n  } */\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 20px;\n  padding-top: 10px;\n`;\n","import { List, Item, ItemLink, Description, Image, Year, Grade, Wrapper } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst IMGPATH = 'https://image.tmdb.org/t/p/original';\n\nconst MoviesList = ({ trendFilms }) => {\n  return (\n    <List>\n      {trendFilms.map(({ id, title, poster_path, release_date, vote_average }) => {\n        return (\n          <Item key={id}>\n            <ItemLink to={`movies/${id}`}>\n              <Image src={`${IMGPATH}/${poster_path}`} alt={`${title}`} />\n              <Wrapper>\n              <Description>{title}</Description>\n              <Year>{`${release_date.slice(0, 4)}`}</Year>\n              </Wrapper>\n              <Grade>{`${vote_average.toFixed(2)}`}</Grade>\n            </ItemLink>\n            \n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  trendFilms: PropTypes.array,\n};\n","import { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { getTrendingFilmAPI } from '../../utils/API';\nimport { Section, TitleWrap, Button } from './Home.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [trendFilms, setTrendFilms] = useState([]);\n  const [today, setToday] = useState(true);\n\n  useEffect(() => {\n    const getTrendFilm = async () => {\n      \n      let currentTrendFilms;\n      try {\n        if (today) {\n          currentTrendFilms = await getTrendingFilmAPI('day');\n        }\n        if (!today) {\n          currentTrendFilms = await getTrendingFilmAPI('week');\n        }\n\n        setTrendFilms(currentTrendFilms.results);\n      } catch {\n        toast.error('Oops, something went wrong!');\n      } finally {\n      }\n    };  \n\n    getTrendFilm();\n  }, [today]);\n\n  const handleClick = () => {\n    setToday(!today);\n  };\n\n  return (\n    <Section>\n      <TitleWrap>\n        <Button type=\"button\" autoFocus onClick={handleClick}>\n          TRENDING TODAY\n        </Button>\n        <Button type=\"button\" onClick={handleClick}>\n          TRENDING FOR WEEK\n        </Button>\n      </TitleWrap>\n      <MoviesList trendFilms={trendFilms} />\n    </Section>\n  );\n};\n\nexport default Home;\n"],"names":["Section","styled","Button","TitleWrap","trendFilms","map","id","title","poster_path","release_date","vote_average","to","src","alt","slice","toFixed","useState","setTrendFilms","today","setToday","useEffect","getTrendFilm","getTrendingFilmAPI","currentTrendFilms","results","toast","handleClick","type","autoFocus","onClick"],"sourceRoot":""}