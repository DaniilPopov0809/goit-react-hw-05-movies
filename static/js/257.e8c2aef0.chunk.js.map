{"version":3,"file":"static/js/257.e8c2aef0.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","utils/API.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const CardSection = styled.section`\n  padding: 10px 0;\n\n  border-bottom: 1px solid var(--link-color);\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-block;\n  border: 1px solid var(--link-color);\n  border-radius: 10px;\n  padding: 4px 10px;\n  margin-bottom: 5px;\n  color: var(--link-color);\n  transition: border-color 200ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus,\n  &:hover {\n    border-color: var(--accent-color);\n  }\n\n  &:active {\n    background-color: var(--accent-color);\n    border-color: var(--accent-color);\n  }\n`;\n\nexport const InfoWrapper = styled.div``;\n\nexport const DeteilsWrapper = styled.div`\nposition: relative;\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n    margin-right: 20px;\n  }\n`;\nexport const Description = styled.div`\n  color: var(--secondary-text-color);\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid var(--link-color);\n`;\n\nexport const AdditionalLink = styled(NavLink)`\n  display: inline-block;\n  padding: 4px 10px;\n  font-size: 18px;\n  font-weight: 500;\n  color: var(--link-color);\n  border-radius: 10px;\n  border: 1px solid var(--link-color);\n  text-shadow: var(--shadow);\n\n  transition: border-color 200ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus,\n  &:hover {\n    border-color: var(--accent-color);\n  }\n\n  &.active {\n    color: var(--accent-color);\n  }\n`;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  gap: 5px;\n`;\n\n\n\nexport const Grade = styled.p`\n  position: absolute;\n  top: 0;\n  font-weight: 500;\n  font-size: 16px;\n  padding: 5px 10px;\n  background-color: var(--accent-color);\n`;","import { Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport { MdOutlineArrowBackIos } from 'react-icons/md';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { getFilmDetailsAPI } from '../../utils/API';\nimport { LoaderWrapper } from '../../components/Layout/Layout.styled';\nimport {\n  CardSection,\n  BackLink,\n  InfoWrapper,\n  DeteilsWrapper,\n  Image,\n  Description,\n  Title,\n  SubTitle,\n  AdditionalSection,\n  AdditionalLink,\n  AdditionalList,\n  Grade,\n} from './MovieDetails.styled';\nimport notFoundPoster from '../../image/not_found_poster.png';\nconst IMGPATH = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movieDetails, setMovieDetails] = useState({});\n\n  const [genres, setGenres] = useState('');\n\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const data = await getFilmDetailsAPI(movieId);\n\n        setMovieDetails(data);\n        setGenres(data.genres.map(genre => genre.name).join('/'));\n      } catch {\n        toast.error('Oops, something went wrong!');\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, overview, release_date\n  } = movieDetails;\n\n  \n  return (\n    <>\n      { (Object.keys(movieDetails).length !== 0) && <CardSection>\n        <BackLink to={backLocationRef.current}>\n          <MdOutlineArrowBackIos size={12} />\n          Go Back\n        </BackLink>\n        <DeteilsWrapper>\n          <Image\n            src={poster_path ? `${IMGPATH}${poster_path}` : `${notFoundPoster}`}\n            alt={title}\n            width={350}\n          />\n          <InfoWrapper>\n            <Title>{title}</Title>\n            <Description>\n              User score: {Math.round(vote_average * 10)}%\n            </Description>\n            <SubTitle>Overview</SubTitle>\n            <Description>{overview}</Description>\n            <SubTitle>Genres</SubTitle>\n            <Description>{genres}</Description>\n            <SubTitle>Release:</SubTitle>\n            <Description>{release_date.slice(0, 4)}</Description>\n          </InfoWrapper>\n          <Grade>{vote_average.toFixed(2)}</Grade>\n        </DeteilsWrapper>\n      </CardSection> }\n\n      <AdditionalSection>\n        <Title>Additional information</Title>\n        <AdditionalList>\n          <li>\n            <AdditionalLink to=\"cast\" state={{ from: location }}>\n              Cast\n            </AdditionalLink>\n          </li>\n          <li>\n            <AdditionalLink to=\"reviews\" state={{ from: location }}>\n              Reviews\n            </AdditionalLink>\n          </li>\n        </AdditionalList>\n      </AdditionalSection>\n      <Suspense\n        fallback={\n          <LoaderWrapper>\n            <Loader />\n          </LoaderWrapper>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst PARAMS = {\n  params: {\n    api_key: '5928663a35cf4a3fefab8899a0242484',\n  },\n};\n\nasync function getTrendingFilmAPI(param) {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/${param}`,\n    PARAMS\n  );\n  const data = response.data;\n  return data;\n}\n\nasync function getFilmDetailsAPI(movieId) {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, PARAMS);\n  const data = response.data;\n  return data;\n}\n\nasync function getCreditsFilmAPI(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    PARAMS\n  );\n  const data = response.data;\n  return data;\n}\n\nasync function getReviewsFilmAPI(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    PARAMS\n  );\n  const data = response.data;\n  return data;\n}\n\nasync function getSearchFilmAPI(searchMovie) {\n  const KEY = '5928663a35cf4a3fefab8899a0242484';\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${searchMovie}&page=1&include_adult=false`\n  );\n  const data = response.data;\n  return data;\n}\n\nexport {\n  getTrendingFilmAPI,\n  getCreditsFilmAPI,\n  getFilmDetailsAPI,\n  getReviewsFilmAPI,\n  getSearchFilmAPI,\n};\n"],"names":["CardSection","styled","BackLink","Link","InfoWrapper","DeteilsWrapper","Image","Description","Title","SubTitle","AdditionalSection","AdditionalLink","NavLink","AdditionalList","Grade","movieId","useParams","useState","movieDetails","setMovieDetails","genres","setGenres","location","useLocation","backLocationRef","useRef","state","from","useEffect","getMovieDetails","getFilmDetailsAPI","data","map","genre","name","join","toast","poster_path","title","vote_average","overview","release_date","Object","keys","length","to","current","size","src","notFoundPoster","alt","width","Math","round","slice","toFixed","Suspense","fallback","Loader","BASE_URL","PARAMS","params","api_key","getTrendingFilmAPI","param","axios","response","getCreditsFilmAPI","getReviewsFilmAPI","getSearchFilmAPI","searchMovie"],"sourceRoot":""}