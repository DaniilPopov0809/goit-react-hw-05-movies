{"version":3,"file":"static/js/297.7ee02951.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  border-bottom: 1px solid var(--link-color);\n  padding: 10px 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  padding: 10px;\n\n  box-shadow: var(--shadow);\n\n  border: 1px solid var(--link-color);\n  border-radius: 10px;\n  overflow: hidden;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Description = styled.p`\n  color: var(--secondary-text-color);\n`;\n\nexport const Title = styled.h3`\n  color: var(--link-color);\n  margin-bottom: 5px;\n`;\n\nexport const Image = styled.img`\n  max-width: 80px;\n  max-height: 80px;\n  border: none;\n  border-radius: 50%;\n  margin-right: 10px;\n`;\n\nexport const ItemWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Date = styled.p`\n  margin-bottom: 10px;\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n  border-bottom: 1px solid var(--link-color);\n  padding: 10px 0;\n  font-weight: 500;\n`;\n","import styled from '@emotion/styled';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Form = styled.form`\n  padding: 20px 0;\n  display: flex;\n  justify-content: center;\n  border-bottom: 1px solid var(--link-color);\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  padding-left: 12px;\n  border-radius: 10px;\n  border: none;\n  font-size: 16px;\n  outline: var(--secondary-text-color) solid 2px;\n\n &:hover,\n &:focus {\n  outline: 3px solid var(--accent-color);\n }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  outline: none;\n  color: var(--lupa-color);\n`;\n\nexport const FormWrap = styled.div`\n  position: relative;\n`;\n\nexport const Lupa = styled(BsSearch)`\n  &:hover,\n  &:focus {\n    color: var(--accent-color);\n  }\n`;\n","import { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, Input, Button, FormWrap, Lupa } from './Searchbar.styled';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  const handleSumbitForm = event => {\n    event.preventDefault();\n    const query = event.target.inputSearch.value;\n\n    if (query.trim() === '') {\n      toast.info('Enter search image or photo!');\n      return;\n    }\n    setSearchParams(query ? { query } : {});\n    onSubmit(query);\n  };\n\n  useEffect(() => {\n    if (searchQuery) {\n      onSubmit(searchQuery);\n    }\n  });\n\n  return (\n    <>\n      <Form onSubmit={handleSumbitForm}>\n        <FormWrap>\n          <Input\n            type=\"text\"\n            name=\"inputSearch\"\n            placeholder=\"Enter the movie\"\n            defaultValue={searchQuery}\n            autoFocus\n          />\n          <Button type=\"submit\">\n            <Lupa style={{ width: 20, height: 20 }} />\n          </Button>\n        </FormWrap>\n      </Form>\n    </>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getSearchFilmAPI } from 'utils/API';\nimport Loader from 'components/Loader/Loader';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { Message } from 'components/Reviews/Reviews.styled';\nimport { LoaderWrapper } from '../../components/Layout/Layout.styled';\nimport {\n  List,\n  Description,\n  Image,\n  Item,\n  ItemLink,\n  Year,\n  Grade,\n  Wrapper,\n} from '../../components/MoviesList/MoviesList.styled';\nimport notFoundPoster from '../../image/not_found_poster.png';\n\nconst IMGPATH = 'https://image.tmdb.org/t/p/original/';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [foundMovies, setFoundMovies] = useState([]);\n\n  const location = useLocation();\n\n  const onSubmit = searchValue => {\n    setSearchMovie(searchValue);\n  };\n\n  useEffect(() => {\n    const getSearchFilm = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getSearchFilmAPI(searchMovie);\n        setFoundMovies(data.results);\n      } catch {\n        toast.error('Oops, something went wrong!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (searchMovie) {\n      getSearchFilm();\n    }\n  }, [searchMovie]);\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      {isLoading && (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      )}\n      {foundMovies.length !== 0 && searchMovie && (\n        <List>\n          {foundMovies.map(\n            ({ title, poster_path, id, release_date, vote_average }) => {\n              return (\n                <Item key={id}>\n                  <ItemLink state={{ from: location }} to={`/movies/${id}`}>\n                    {\n                      <Image\n                        src={\n                          poster_path\n                            ? `${IMGPATH}${poster_path}`\n                            : `${notFoundPoster}`\n                        }\n                        alt={title}\n                      />\n                    }\n                    <Wrapper>\n                    <Description>{title}</Description>\n                    <Year>{`${release_date.slice(0, 4)}`}</Year>\n                    </Wrapper>\n                    <Grade>{`${vote_average.toFixed(2)}`}</Grade>\n                  </ItemLink>\n                  \n                </Item>\n              );\n            }\n          )}\n        </List>\n      )}\n      {foundMovies.length === 0 && searchMovie && !isLoading && (\n        <Message>Nothing found according to your request!</Message>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","Item","Description","Title","Image","ItemWrap","Date","Message","Form","Input","Button","FormWrap","Lupa","BsSearch","onSubmit","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","event","preventDefault","query","target","inputSearch","value","trim","toast","type","name","placeholder","defaultValue","autoFocus","style","width","height","useState","searchMovie","setSearchMovie","isLoading","setIsLoading","foundMovies","setFoundMovies","location","useLocation","getSearchFilm","getSearchFilmAPI","data","results","searchValue","Loader","length","map","title","poster_path","id","release_date","vote_average","state","from","to","src","notFoundPoster","alt","slice","toFixed"],"sourceRoot":""}